// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  username  String   @unique
  password  String
  avatarUrl String?
  timezone  String?  @default("UTC")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  notes         Note[]
  inspirations  Inspiration[]
  moods         Mood[]
  diaryEntries  DiaryEntry[]
  events        Event[]
  people        Person[]
}

model Note {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  title     String
  content   String
  tags      Json
  people    NotePerson[] // 多对多关系
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Inspiration {
  id       String   @id @default(uuid())
  userId   String
  title    String
  content  String
  user     User     @relation(fields: [userId], references: [id])
}

model Mood {
  id       String   @id @default(uuid())
  userId   String
  emotion  String
  user     User     @relation(fields: [userId], references: [id])
}

model DiaryEntry {
  id       String   @id @default(uuid())
  userId   String
  content  String
  user     User     @relation(fields: [userId], references: [id])
}

model Event {
  id       String   @id @default(uuid())
  userId   String
  title    String
  user     User     @relation(fields: [userId], references: [id])
}

model Person {
  id       String   @id @default(uuid())
  userId   String
  name     String
  user     User     @relation(fields: [userId], references: [id])
  notes    NotePerson[]
}

model NotePerson {
  id       String  @id @default(uuid())
  note     Note    @relation(fields: [noteId], references: [id])
  noteId   String
  person   Person  @relation(fields: [personId], references: [id])
  personId String
  createdAt DateTime @default(now())

  @@unique([noteId, personId])
}


